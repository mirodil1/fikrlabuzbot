services:
  admin:
    build:
      context: .
      dockerfile: ./compose/production/admin/Dockerfile
    image: fikrlab_production_admin
    container_name: fikrlab_production_admin
    depends_on:
      - postgres
      # - redis
    volumes:
      - fikrlab_production_media:/app/apps/media
      - fikrlab_production_staticfiles:/app/staticfiles
    env_file:
      - ./.envs/.production/.admin
      - ./.envs/.production/.postgres
    ports:
      - '8000:8000'
    command: /start
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  bot:
    image: fikrlab_production_bot
    container_name: fikrlab_production_bot
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: ./compose/production/bot/Dockerfile
    depends_on:
      - postgres
    volumes:
      - fikrlab_production_media:/app/media
    command: python3 -m bot
    restart: always
    env_file:
      - ./.envs/.production/.bot
      - ./.envs/.production/.postgres
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: fikrlab_production_postgres
    container_name: fikrlab_production_postgres
    volumes:
      - fikrlab_production_postgres_data:/var/lib/postgresql/data
      - fikrlab_production_postgres_data_backups:/backups
    command: "postgres -c max_connections=150
            -c shared_buffers=512MB -c effective_cache_size=1536MB
            -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
            -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
            -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
            -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1
            -c timezone=Asia/Tashkent"
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    restart: always
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: fikrlab_production_nginx
    ports:
      - 8080:80
    depends_on:
      - admin
    volumes:
      - fikrlab_production_staticfiles:/usr/share/nginx/staticfiles:ro
      - fikrlab_production_media:/usr/share/nginx/media:ro

volumes:
  fikrlab_production_postgres_data: {}
  fikrlab_production_postgres_data_backups: {}
  fikrlab_production_staticfiles: {}
  fikrlab_production_media: {}

